let brands;
    let seasonBrandField = [];
    let tmpBrandsArr = [];
    let fullData = [];


    (function () {
        getListItem("fcSeasons");

        addEventListeners();
    })();


    function getListItem(listName) {

        let list = listName;

        let init = {
            method: 'GET',
            headers: {
                'X-RequestDigest': document.getElementById('__REQUESTDIGEST').value,
                'Accept': 'application/json; odata=verbose'
            },
            credentials: 'include'
        }

        fetch(_spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/GetByTitle('" + list + "')/items?$top=2000", init).then(function (response) {
            if (response.ok) {
                return response.json();
            }
            else {
                throw new Error('Network response was not ok.');
            }
        }).then(function (data) {
            fullData = data.d.results;
            tmpBrandsArr = createBrandsArr(data.d.results)


            // Create unique array without duplicates
            brands = tmpBrandsArr.reduce(function (a, b) {
                if (a.indexOf(b) < 0) a.push(b);
                return a;
            }, []);


            // Render Brands
            let options = "";
            brands.forEach((brand, i) => {
                options += "<option value=" + i + ">" + brand + "</option>"
            });

            document.getElementById("selectBrand").insertAdjacentHTML("beforeend", options);


        }).catch(function (error) {

        });
    }

    function getSelectedItems() {

        let selectedBrand = document.querySelector("#selectBrand").selectedOptions[0].text;
        let input = "";


        let brand;
        let sBrand;
        let obj = {};
        let i;

        console.log('fullData: ', tmpBrandsArr)
        fullData.forEach((element, i) => {

            brand = element.SeasonBrand.trim();
            sBrand = selectedBrand.trim();

            obj = {
                selBrand: sBrand,
                brand: brand,
                title: element.Title
            }

            if (brand == sBrand) {

                input += `<div>
                     <input type="checkbox" id="${element.Title + '_' + i}" name="${element.Title + '_' + i}" class="${element.Title}">
                     <label for="${element.Title + '_' + i}">${element.Title}</label>
                   </div>`

                i++
            };
            document.querySelector(".seasons").innerHTML = input;
            console.log('obj: ', obj)
        });

    }

    function createBrandsArr(arr) {

        let tempBrands = [];

        if (arr.length > 0) {

            arr.forEach(element => {

                if (element.SeasonBrand != null) {

                    tempBrands.push(element.SeasonBrand.replace('Bay City >', '').trim());
                    seasonBrandField.push(element.Title);

                }

            });

        }

        return tempBrands;
    };

    function getSeason(e) {

        let seasons = seasonBrandField;

        getSelectedItems();

        // Show elements
        if (e.target.selectedOptions[0].innerText != "Select brand") {
            document.querySelector(".createButton").style.visibility = "visible";
            document.querySelector(".createButton").style.opacity = 1;
        } else {
            document.querySelector(".createButton").style.visibility = "hidden";
            document.querySelector(".createButton").style.opacity = 0;
        }


        document.querySelector('.seasons').style.visibility = "visible";
        document.querySelector('.seasons').style.opacity = 1;

    }


    function createListItem(listName, selectedBrand, selectedSeason) {

        let list = listName;

        let init = {
            method: 'GET',
            headers: {
                'X-RequestDigest': document.getElementById('__REQUESTDIGEST').value,
                'Accept': 'application/json; odata=verbose'
            },
            credentials: 'include'
        }

        fetch(_spPageContextInfo.webAbsoluteUrl + "/_api/lists/getbytitle('" + list + "')?$select=ListItemEntityTypeFullName", init).then(function (response) {

            if (response.ok) {
                return response.json();
            }
            else {
                throw new Error('Network response was not ok.');
            }
        }).then(function (data) {

            let metadata = {
                tempBrand: selectedBrand,
                tempSeason: selectedSeason,
                __metadata: {
                    type: data.d.ListItemEntityTypeFullName
                }
            }

            let init = {
                method: 'POST',
                headers: {
                    'X-RequestDigest': document.getElementById('__REQUESTDIGEST').value,
                    'Accept': 'application/json; odata=verbose',
                    'Content-Type': 'application/json; odata=verbose'
                },
                credentials: 'include',
                body: JSON.stringify(metadata)
            }

            return fetch(_spPageContextInfo.webAbsoluteUrl + "/_api/lists/getbytitle('" + list + "')/items", init);

        }).then(function (response) {

            if (response.ok) {

                console.log('Item created!')
            }
            else {
                throw new Error('Network response was not ok.');
            }
        }).catch(function (error) {

            console.error(error);

        })
    };

    function createSeason() {

        let selectedBrand = document.querySelector('#selectBrand').selectedOptions[0].text;
        let selectedSeasons = [...document.querySelectorAll(".seasons input")].filter(s => s.checked == true);


        selectedSeasons.forEach(selectedSeason => {

            createListItem("fcSeasons", selectedBrand, selectedSeason.className.replace("-", "").replace("  ", " ").replace(" ", " - "));

        });

        // Reset 
        document.querySelector(".niprogress-bar").style.display = "block";
        document.querySelector(".createButton").style.visibility = "hidden";
        document.querySelector('#selectBrand').setAttribute("disabled", "");


        setTimeout(function () {
            document.querySelector(".seasons").style.visibility = 'hidden';
            document.querySelector(".seasons").style.opacity = 0;
        }, 5000)

        setTimeout(function () {
            document.querySelector('#selectBrand').options[0].selected = true;
            document.querySelector('#selectBrand').removeAttribute("disabled", "");

            document.querySelector(".niprogress-bar").style.display = "none";
            // Show success message
            document.querySelector(".keySuccessMessage").style.visibility = 'visible';
            document.querySelector(".keySuccessMessage").style.opacity = 1;

            setTimeout(function () {
                document.querySelector(".keySuccessMessage").style.visibility = 'hidden';
                document.querySelector(".keySuccessMessage").style.opacity = 0;
            }, 4000);

        }, 7000);




    }


    function addEventListeners() {
        //Render Seasons
        document.querySelector("#selectBrand").addEventListener("change", getSeason);

        //Create Seasons
        document.querySelector(".createButton").addEventListener("click", createSeason);

    }
